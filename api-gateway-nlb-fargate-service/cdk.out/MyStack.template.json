{
  "Resources": {
    "MyVpcF9F0CA6F": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/Resource"
      }
    },
    "MyVpcPublicSubnet1SubnetF6608456": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PublicSubnet1/Subnet"
      }
    },
    "MyVpcPublicSubnet1RouteTableC46AB2F4": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PublicSubnet1/RouteTable"
      }
    },
    "MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnet1SubnetF6608456"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "MyVpcPublicSubnet1DefaultRoute95FDF9EB": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVpcIGW5C4A4F63"
        }
      },
      "DependsOn": [
        "MyVpcVPCGW488ACE0D"
      ],
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PublicSubnet1/DefaultRoute"
      }
    },
    "MyVpcPublicSubnet1EIP096967CB": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PublicSubnet1/EIP"
      }
    },
    "MyVpcPublicSubnet1NATGatewayAD3400C1": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MyVpcPublicSubnet1EIP096967CB",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnet1SubnetF6608456"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PublicSubnet1/NATGateway"
      }
    },
    "MyVpcPublicSubnet2Subnet492B6BFB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PublicSubnet2/Subnet"
      }
    },
    "MyVpcPublicSubnet2RouteTable1DF17386": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PublicSubnet2/RouteTable"
      }
    },
    "MyVpcPublicSubnet2RouteTableAssociation227DE78D": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "MyVpcPublicSubnet2DefaultRoute052936F6": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVpcIGW5C4A4F63"
        }
      },
      "DependsOn": [
        "MyVpcVPCGW488ACE0D"
      ],
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PublicSubnet2/DefaultRoute"
      }
    },
    "MyVpcPublicSubnet2EIP8CCBA239": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PublicSubnet2/EIP"
      }
    },
    "MyVpcPublicSubnet2NATGateway91BFBEC9": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MyVpcPublicSubnet2EIP8CCBA239",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PublicSubnet2/NATGateway"
      }
    },
    "MyVpcPrivateSubnet1Subnet5057CF7E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PrivateSubnet1/Subnet"
      }
    },
    "MyVpcPrivateSubnet1RouteTable8819E6E2": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PrivateSubnet1/RouteTable"
      }
    },
    "MyVpcPrivateSubnet1RouteTableAssociation56D38C7E": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
        },
        "SubnetId": {
          "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "MyVpcPrivateSubnet1DefaultRouteA8CDE2FA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyVpcPublicSubnet1NATGatewayAD3400C1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "MyVpcPrivateSubnet2Subnet0040C983": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PrivateSubnet2/Subnet"
      }
    },
    "MyVpcPrivateSubnet2RouteTableCEDCEECE": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PrivateSubnet2/RouteTable"
      }
    },
    "MyVpcPrivateSubnet2RouteTableAssociation86A610DA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
        },
        "SubnetId": {
          "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "MyVpcPrivateSubnet2DefaultRoute9CE96294": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyVpcPublicSubnet2NATGateway91BFBEC9"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "MyVpcIGW5C4A4F63": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyStack/MyVpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/IGW"
      }
    },
    "MyVpcVPCGW488ACE0D": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "InternetGatewayId": {
          "Ref": "MyVpcIGW5C4A4F63"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpc/VPCGW"
      }
    },
    "MyCluster4C1BA579": {
      "Type": "AWS::ECS::Cluster",
      "Metadata": {
        "aws:cdk:path": "MyStack/MyCluster/Resource"
      }
    },
    "MyTaskDefinition2TaskRoleD9FBE620": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyTaskDefinition2/TaskRole/Resource"
      }
    },
    "MyTaskDefinition2E721A6BC": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "vad1mo/hello-world-rest",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "MyTaskDefinition2MyContainer2LogGroup20EC2F9B"
                },
                "awslogs-stream-prefix": "MyContainer",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "Name": "MyContainer2",
            "PortMappings": [
              {
                "ContainerPort": 5050,
                "HostPort": 5050,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "MyTaskDefinition2ExecutionRole4CC9ADEC",
            "Arn"
          ]
        },
        "Family": "MyStackMyTaskDefinition25C465C4D",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "MyTaskDefinition2TaskRoleD9FBE620",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyTaskDefinition2/Resource"
      }
    },
    "MyTaskDefinition2MyContainer2LogGroup20EC2F9B": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "MyStack/MyTaskDefinition2/MyContainer2/LogGroup/Resource"
      }
    },
    "MyTaskDefinition2ExecutionRole4CC9ADEC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyTaskDefinition2/ExecutionRole/Resource"
      }
    },
    "MyTaskDefinition2ExecutionRoleDefaultPolicyFF25C1D0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MyTaskDefinition2MyContainer2LogGroup20EC2F9B",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MyTaskDefinition2ExecutionRoleDefaultPolicyFF25C1D0",
        "Roles": [
          {
            "Ref": "MyTaskDefinition2ExecutionRole4CC9ADEC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyTaskDefinition2/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "MyFargateService2LB09A6A657": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internal",
        "Subnets": [
          {
            "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
          },
          {
            "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
          }
        ],
        "Type": "network"
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyFargateService2/LB/Resource"
      }
    },
    "MyFargateService2LBPublicListener5D034FCA": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "MyFargateService2LBPublicListenerECSGroup24DF5D7F"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "MyFargateService2LB09A6A657"
        },
        "Port": 80,
        "Protocol": "TCP"
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyFargateService2/LB/PublicListener/Resource"
      }
    },
    "MyFargateService2LBPublicListenerECSGroup24DF5D7F": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "TCP",
        "TargetType": "ip",
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyFargateService2/LB/PublicListener/ECSGroup/Resource"
      }
    },
    "MyFargateService2Service9DF07591": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "MyCluster4C1BA579"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "MyContainer2",
            "ContainerPort": 5050,
            "TargetGroupArn": {
              "Ref": "MyFargateService2LBPublicListenerECSGroup24DF5D7F"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "MyFargateService2ServiceSecurityGroupEF9D39A7",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
              },
              {
                "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
              }
            ]
          }
        },
        "TaskDefinition": {
          "Ref": "MyTaskDefinition2E721A6BC"
        }
      },
      "DependsOn": [
        "MyFargateService2LBPublicListenerECSGroup24DF5D7F",
        "MyFargateService2LBPublicListener5D034FCA"
      ],
      "Metadata": {
        "aws:cdk:path": "MyStack/MyFargateService2/Service/Service"
      }
    },
    "MyFargateService2ServiceSecurityGroupEF9D39A7": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "MyStack/MyFargateService2/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL TRAFFIC",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyFargateService2/Service/SecurityGroup/Resource"
      }
    },
    "MyApi49610EDF": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "MyApi"
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyApi/Resource"
      }
    },
    "MyApiCloudWatchRole2BEC1A9C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyApi/CloudWatchRole/Resource"
      }
    },
    "MyApiAccount13882D84": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "MyApiCloudWatchRole2BEC1A9C",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "MyApi49610EDF"
      ],
      "Metadata": {
        "aws:cdk:path": "MyStack/MyApi/Account"
      }
    },
    "MyApiDeploymentECB0D05E37c20ec83e2bf826422e5a67b883fd00": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "MyApi49610EDF"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "MyApifargateANY19E0A4D2",
        "MyApifargateOPTIONS5D03215D",
        "MyApifargate7EA660D2"
      ],
      "Metadata": {
        "aws:cdk:path": "MyStack/MyApi/Deployment/Resource"
      }
    },
    "MyApiDeploymentStageprodE1054AF0": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "MyApi49610EDF"
        },
        "DeploymentId": {
          "Ref": "MyApiDeploymentECB0D05E37c20ec83e2bf826422e5a67b883fd00"
        },
        "MethodSettings": [
          {
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*"
          }
        ],
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyApi/DeploymentStage.prod/Resource"
      }
    },
    "MyApifargate7EA660D2": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "MyApi49610EDF",
            "RootResourceId"
          ]
        },
        "PathPart": "fargate",
        "RestApiId": {
          "Ref": "MyApi49610EDF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyApi/Default/fargate/Resource"
      }
    },
    "MyApifargateANY19E0A4D2": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "MyApifargate7EA660D2"
        },
        "RestApiId": {
          "Ref": "MyApi49610EDF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "ConnectionId": {
            "Ref": "MyVpcLink8ECB821F"
          },
          "ConnectionType": "VPC_LINK",
          "IntegrationHttpMethod": "ANY",
          "Type": "HTTP_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "http://",
                {
                  "Fn::GetAtt": [
                    "MyFargateService2LB09A6A657",
                    "DNSName"
                  ]
                }
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyApi/Default/fargate/ANY/Resource"
      }
    },
    "MyApifargateOPTIONS5D03215D": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "MyApifargate7EA660D2"
        },
        "RestApiId": {
          "Ref": "MyApi49610EDF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyApi/Default/fargate/OPTIONS/Resource"
      }
    },
    "MyVpcLink8ECB821F": {
      "Type": "AWS::ApiGateway::VpcLink",
      "Properties": {
        "Name": "MyVpcLink",
        "TargetArns": [
          {
            "Ref": "MyFargateService2LB09A6A657"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyStack/MyVpcLink/Resource"
      }
    }
  },
  "Outputs": {
    "MyFargateService2LoadBalancerDNS0DCDFFAB": {
      "Value": {
        "Fn::GetAtt": [
          "MyFargateService2LB09A6A657",
          "DNSName"
        ]
      }
    },
    "MyApiEndpoint869ABE96": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "MyApi49610EDF"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "MyApiDeploymentStageprodE1054AF0"
            },
            "/"
          ]
        ]
      }
    }
  }
}